#记得中点啊，啥啥的，指针不用的时候要指向空，很重要
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        if not head or not head.next:
            return True
        slow=head
        fast=head.next
        while fast and fast.next:
            slow=slow.next
            fast=fast.next.next
        slow=slow.next
        pre=None
        while slow:
            cur=slow
            slow=slow.next
            cur.next=pre
            pre=cur
        while pre:
            if head.val!=pre.val:
                return False
            head=head.next
            pre=pre.next
        return True
#简洁版，自己也要学会写啊
def isPalindrome(self, head):
    rev = None
    slow = fast = head
    while fast and fast.next:
        fast = fast.next.next
        rev, rev.next, slow = slow, rev, slow.next
    if fast:
        slow = slow.next
    while rev and rev.val == slow.val:
        slow = slow.next
        rev = rev.next
    return not rev
