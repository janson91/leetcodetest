# Definition for singly-linked list with a random pointer.
# class RandomListNode(object):
#     def __init__(self, x):
#         self.label = x
#         self.next = None
#         self.random = None

class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: RandomListNode
        :rtype: RandomListNode
        """
        if not head:
            return None
        node=head
        while node:
            new_node=RandomListNode(node.label)
            new_node.next=node.next
            node.next=new_node
        node=head
        while node.next:
            new_node=node.next
            if node.random:
                new_node.random=node.random.next
            node=new_node.next
        node=head
        new_head=head.next
        new_node=new_head
        while new_node.next:
            node.next=new_node.next
            node=node.next
            if node.next:
                new_node.next=node.next
        return new_head
