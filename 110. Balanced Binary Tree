#平衡二叉树，概念是两个子树的树高不超过1，而不是所有叶节点高度不超过1
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        def judge(root):
            if root==None:
                return 0
            left=judge(root.left)
            right=judge(root.right)
            if left==-1 or right ==-1:
                return -1
            if left-right>1 or right-left>1:
                return -1
            return max(left,right)+1
        if judge(root)>=0:
            return True
        else:
            return False
