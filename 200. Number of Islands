#每检测到一个1，就把和这个1相邻的所有1都变成#
class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        count=0
        for i in xrange(len(grid)):
            for j in xrange(len(grid[0])):
                if grid[i][j]=="1":
                    count+=1
                    self.verse(grid,i,j)
        return count
    def verse(self,grid,i,j):
        if i >=0 and i < len(grid) and j >=0 and j < len(grid[0]) and grid[i][j]=="1":
            grid[i][j]="#"
            self.verse(grid,i-1,j)
            self.verse(grid,i+1,j)
            self.verse(grid,i,j-1)
            self.verse(grid,i,j+1)
#这个是简化版，感觉简化版的python才能各种优雅，学会用map，学会用列表循环
def numIslands(self, grid):
    def sink(i, j):
        if 0 <= i < len(grid) and 0 <= j < len(grid[i]) and grid[i][j] == '1':
            grid[i][j] = '0'
            map(sink, (i+1, i-1, i, i), (j, j, j+1, j-1))
            return 1
        return 0
    return sum(sink(i, j) for i in range(len(grid)) for j in range(len(grid[i])))
