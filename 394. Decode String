class Solution(object):
    def decodeString(self, s):
        """
        :type s: str
        :rtype: str
        """
        if len(s) < 0:
            return ""
        i = 0;
        j = len(s) - 1
        count = 0
        num = ''
        while i < len(s) and s[i] != '[':
            if '0' <= s[i] <= '9':
                num += s[i]
            i += 1
        if i>len(s)-1:
            return s
        else:
            count = 1
            j = i + 1
            while j < len(s):
                if s[j] == '[': count += 1
                if s[j] == ']': count -= 1
                if count == 0: break
                j += 1
            return s[:i - len(num)] + int(num) * self.decodeString(s[i + 1:j]) + self.decodeString(s[j + 1:])
            
            
#这种正则表达式应该找时间了解一下啊啊啊啊啊啊
def decodeString(self, s):
    while '[' in s:
        s = re.sub(r'(\d+)\[([a-z]*)\]', lambda m: int(m.group(1)) * m.group(2), s)
    return s
