#这题其实挺简单的，但是需要意识到break和continue的区别，时刻意识到，这次就用混了
class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        # if m > n:
        #     m,n=n,m
        grid=[[0]*(m+1) for row in range(n+1)]
        grid[0][0]=1
        for i in range(1,m+n-1):
            for j in range(i+1):
                if j>=m or i-j>=n:
                    continue
                grid[i-j][j]=grid[i-j][j-1]+grid[i-j-1][j]
        return grid[n-1][m-1]

#而且没有必要建出来矩阵，只需要一个列表从上往下扫就行了，很有道理
class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        dp = [1] * n
        
        for i in xrange(1, m):
            for j in xrange(1, n):
                dp[j] += dp[j - 1]
        return dp[n - 1]
