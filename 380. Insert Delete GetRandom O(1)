class RandomizedSet(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.dic={}
        self.nums=[]
        

    def insert(self, val):
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        # print "insert"
        # print self.dic
        # print self.nums
        if val not in self.dic:
            self.nums.append(val)
            self.dic[val]=len(self.nums)-1
            return True
        return False
        

    def remove(self, val):
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        :type val: int
        :rtype: bool
        """
        # print "remove"
        # print self.dic
        # print self.nums
        if val in self.dic:
            index=self.dic.pop(val)
            value=self.nums.pop()
            if index<len(self.nums):
                self.nums[index]=value
                self.dic[value]=index
            return True
        return False
        

    def getRandom(self):
        """
        Get a random element from the set.
        :rtype: int
        """
        ran=random.randint(0,len(self.nums)-1)
        return self.nums[ran]
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
