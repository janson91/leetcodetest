#链表反转，迭代法和递归法：
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # pre=None
        # while head:
        #     cur=head
        #     head=head.next
        #     cur.next=pre
        #     pre=cur
        # return pre
        
        return self._reverse(head)
    def _reverse(self,node,pre=None):
        if not node:
            return pre
        temp=node.next
        node.next=pre
        return self._reverse(temp,node)
