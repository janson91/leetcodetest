#巧用排序算法
class Solution(object):
    def countSmaller(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        smaller=[0]*len(nums)
        def sort(enum):
            half=len(enum)/2
            if half:
                left,right=sort(enum[:half]),sort(enum[half:])
                i=j=0
                while i < len(left) or j < len(right):
                    if j == len(right) or i < len(left) and left[i][1] <= right[j][1]:
                        enum[i+j] = left[i]
                        smaller[left[i][0]] += j
                        i+=1
                    else:
                        enum[i+j] = right[j]
                        j += 1
            return enum
        sort(list(enumerate(nums)))
        return smaller
